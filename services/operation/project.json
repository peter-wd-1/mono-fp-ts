{
  "root": "services/operation",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "services/operation/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nrwl/node:webpack",
      "outputs": [
        "{options.outputPath}"
      ],
      "options": {
        "outputPath": "dist/services/operation",
        "main": "services/operation/src/main.ts",
        "tsConfig": "services/operation/tsconfig.app.json",
        "assets": [
          "services/operation/src/assets"
        ]
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false,
          "fileReplacements": [
            {
              "replace": "services/operation/src/environments/environment.ts",
              "with": "services/operation/src/environments/environment.prod.ts"
            }
          ]
        }
      }
    },
    "serve": {
      "executor": "@nrwl/node:node",
      "options": {
        "buildTarget": "operation:build",
        "watch": true
      },
      "configurations": {
        "production": {
          "buildTarget": "operation:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": [
        "{options.outputFile}"
      ],
      "options": {
        "lintFilePatterns": [
          "services/operation/**/*.ts"
        ]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": [
        "coverage/services/operation"
      ],
      "options": {
        "jestConfig": "services/operation/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "type-check": {
      "executor": "@nrwl/js:tsc",
      "options": {
        "main": "services/operation/src/main.ts",
        "outputPath": "dist/services/operation",
        "tsConfig": "services/operation/tsconfig.app.json"
      }
    },
    "docker-dev": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f services/operation/docker/docker-compose.dev.yml up -d"
      }
    },
    "push-deploy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f services/operation/docker/docker-compose.yml build && docker-compose -f services/operation/docker/docker-compose.yml push"
      }
    },
    "serve-deploy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker stack deploy --compose-file services/operation/docker/docker-compose.yml operation"
      }
    }
  },
  "tags": []
}
